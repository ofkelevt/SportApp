<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:SportApp.ViewModels"
             x:Class="SportApp.Views.ViewEvent"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:Models="clr-namespace:SportApp.Models"
             x:DataType="vm:ViewEventViewModel"
             BackgroundColor="White">
    <RefreshView Command="{Binding RefreshCommand}" IsRefreshing="{Binding IsRefreshing}">
        <ScrollView>
            <VerticalStackLayout Padding="15" Spacing="20">

                <!-- Event Image -->
                <Frame CornerRadius="15" HasShadow="True">
                    <Image Source="{Binding SelectedEvent.PictureUrl}" 
                           HeightRequest="250" Aspect="AspectFill"/>
                </Frame>

                <!-- Event Title and Creator Info -->
                <VerticalStackLayout HorizontalOptions="Center" Spacing="5">

                    <!-- Event Name: Switch Between Label and Entry -->
                    <Label Text="{Binding SelectedEvent.EventName}" 
                           FontSize="32" FontAttributes="Bold" HorizontalOptions="Center">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" 
                                         Binding="{Binding IsCreator}" Value="True">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>

                    </Label>

                    <Entry Text="{Binding SelectedEvent.EventName}" FontSize="32" HorizontalOptions="Center">
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>

                    <VerticalStackLayout Spacing="10" Padding="5">
                        <HorizontalStackLayout HorizontalOptions="Center">
                            <Image Source="{Binding SelectedEvent.Crator.PictureUrl}" HeightRequest="100" WidthRequest="100" Aspect="AspectFill"/>
                            <Label Text="{Binding SelectedEvent.Crator.Username, FallbackValue='[No Username]'}" FontSize="40" FontAttributes="Bold">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=NavigateToUserDetailsCommand}" CommandParameter="{Binding SelectedEvent.Crator}" />
                                </Label.GestureRecognizers>
                            </Label>
                            <!-- Checkbox Visible Only for Creator -->
                        </HorizontalStackLayout>
                        <HorizontalStackLayout HorizontalOptions="Center">
                            <Label Text="{Binding SelectedEvent.Crator.FirstName}" FontSize="40" FontAttributes="Bold"/>
                            <Label Text="{Binding SelectedEvent.Crator.LastName}" FontSize="40" FontAttributes="Bold"/>
                        </HorizontalStackLayout>
                    </VerticalStackLayout>
                </VerticalStackLayout>

                <!-- Event Details: Location, CreatedAt, and EndsAt -->
                <Frame CornerRadius="10" BackgroundColor="#f1f1f1" Padding="10">
                    <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto, Auto, Auto, Auto">

                        <!-- City Name -->
                        <Label Text="Location:" FontAttributes="Bold" Grid.Row="0" Grid.Column="0"/>
                        <Label Text="{Binding SelectedEvent.CityName}" Grid.Row="0" Grid.Column="1">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsCreator}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Entry Text="{Binding SelectedEvent.CityName}" Grid.Row="0" Grid.Column="1">
                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>

                        <!-- Street Name -->
                        <Label Text="Street:" FontAttributes="Bold" Grid.Row="1" Grid.Column="0"/>
                        <Label Text="{Binding SelectedEvent.StreetName}" Grid.Row="1" Grid.Column="1">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsCreator}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Entry Text="{Binding SelectedEvent.StreetName}" Grid.Row="1" Grid.Column="1">
                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>

                        <!-- House Number -->
                        <Label Text="Number:" FontAttributes="Bold" Grid.Row="2" Grid.Column="0"/>
                        <Label Text="{Binding SelectedEvent.HomeNum}" Grid.Row="2" Grid.Column="1">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsCreator}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Entry Text="{Binding SelectedEvent.HomeNum}" Grid.Row="2" Grid.Column="1">
                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>

                        <!-- CreatedAt and EndsAt -->
                        <Label Text="Created At:" FontAttributes="Bold" Grid.Row="3" Grid.Column="0"/>
                        <Label Text="{Binding SelectedEvent.CreatedAt, StringFormat='{0:MMM dd, yyyy HH:mm}'}" 
                               Grid.Row="3" Grid.Column="1"/>

                        <Label Text="Ends At:" FontAttributes="Bold" Grid.Row="4" Grid.Column="0"/>
                        <Label Text="{Binding SelectedEvent.EndsAt, StringFormat='{0:MMM dd, yyyy HH:mm}'}" 
                               Grid.Row="4" Grid.Column="1"/>
                    </Grid>
                </Frame>

                <!-- Event Description -->
                <Frame CornerRadius="10" BackgroundColor="#f5f5f5" Padding="10">
                    <StackLayout>
                        <Label Text="{Binding SelectedEvent.Description}" FontSize="16" TextColor="Gray">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsCreator}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Entry Text="{Binding SelectedEvent.Description}" FontSize="16">
                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>
                    </StackLayout>
                </Frame>

                <!-- Expander for Participants -->
                <Grid ColumnDefinitions="*,*">
                    <toolkit:Expander Grid.Column="1">
                        <toolkit:Expander.Header>
                            <Button Text="View Participants" BackgroundColor="#6A1B9A" TextColor="White"/>
                        </toolkit:Expander.Header>
                        <Grid RowDefinitions="Auto,*">
                            <CollectionView ItemsSource="{Binding Users}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="Models:Users">
                                        <Grid RowDefinitions="Auto,Auto">
                                            <HorizontalStackLayout Grid.Row="0">
                                                <Image Source="{Binding PictureUrl}" HeightRequest="40" WidthRequest="40" Aspect="AspectFill"/>
                                                <Label Text="{Binding Username}" FontSize="16">
                                                    <Label.GestureRecognizers>
                                                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=NavigateToUserDetailsCommand}" CommandParameter="{Binding .}" />
                                                    </Label.GestureRecognizers>
                                                </Label>
                                                <!-- Checkbox Visible Only for Creator -->
                                                <CheckBox IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=IsCreator}"
                                                          IsChecked="{Binding IsCheck, Mode=TwoWay}"/>
                                            </HorizontalStackLayout>
                                            <HorizontalStackLayout Grid.Row="1">
                                                <Label Text="{Binding FirstName}" FontSize="16"/>
                                                <Label Text="{Binding LastName}" FontSize="16"/>
                                            </HorizontalStackLayout>
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                            <!-- Kick and Waitlist Buttons -->
                            <StackLayout Grid.Row="1" Orientation="Horizontal" IsVisible="{Binding IsCreator}">
                                <Button Text="Kick" Command="{Binding KickCommand}" BackgroundColor="Red" TextColor="White" />
                                <Button Text="Waitlist" Command="{Binding WaitlistCommand}" BackgroundColor="Orange" TextColor="White" />
                            </StackLayout>
                        </Grid>
                    </toolkit:Expander>

                    <!-- Expander for Waitlisted Users -->
                    <toolkit:Expander Grid.Column="0">
                        <toolkit:Expander.Header>
                            <Button Text="View Waitlisted" BackgroundColor="#FF5722" TextColor="White"/>
                        </toolkit:Expander.Header>
                        <Grid RowDefinitions="Auto,*">
                            <CollectionView ItemsSource="{Binding WaitListedUsers}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="Models:Users">
                                        <Grid RowDefinitions="Auto,Auto">
                                            <HorizontalStackLayout Grid.Row="0">
                                                <Image Source="{Binding PictureUrl}" HeightRequest="40" WidthRequest="40" Aspect="AspectFill"/>
                                                <Label Text="{Binding Username}" FontSize="16">
                                                    <Label.GestureRecognizers>
                                                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=NavigateToUserDetailsCommand}" CommandParameter="{Binding .}" />
                                                    </Label.GestureRecognizers>
                                                </Label>
                                                <!-- Checkbox Visible Only for Creator -->
                                                <CheckBox IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=IsCreator}"
                                                          IsChecked="{Binding IsCheck, Mode=TwoWay}"/>
                                            </HorizontalStackLayout>
                                            <HorizontalStackLayout Grid.Row="1">
                                                <Label Text="{Binding FirstName }" FontSize="16"/>
                                                <Label Text="{Binding LastName}" FontSize="16"/>
                                            </HorizontalStackLayout>
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                            <StackLayout Grid.Row="1" Orientation="Horizontal" IsVisible="{Binding IsCreator}">
                                <Button Text="Reject" Command="{Binding RejectCommand}" BackgroundColor="Red" TextColor="White" />
                                <Button Text="Accept" Command="{Binding AcceptCommand}" BackgroundColor="Green" TextColor="White" />
                            </StackLayout>
                        </Grid>
                    </toolkit:Expander>
                </Grid>
                <!-- Join Button -->
                <Button Text="Join Event" 
                Command="{Binding JoinCommand}" 
                BackgroundColor="#4CAF50" TextColor="White" 
                Margin="0,10,0,0" HeightRequest="50">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsCratorOrJoin}" Value="true">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>
                        
                    </Button.Triggers>
                </Button>
                <Button Text="Leave Event" 
                        Command="{Binding LeaveCommand}" 
                        BackgroundColor="Red" TextColor="White" 
                        Margin="0,10,0,0" HeightRequest="50">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsJoin}" Value="false">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>

                    </Button.Triggers>
                </Button>
                <Button Text="Save Changes" Command="{Binding SaveCommand}" 
                        BackgroundColor="#4CAF50" TextColor="White" HeightRequest="50">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsCreator}" Value="false">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <CollectionView ItemsSource="{Binding ChatComments}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="Models:ChatComment">
                            <Grid RowDefinitions="Auto,Auto,Auto,Auto">
                                <HorizontalStackLayout Grid.Row="0">
                                    <Image Source="{Binding Commenter.PictureUrl}" HeightRequest="40" WidthRequest="40" Aspect="AspectFill"/>
                                    <Label Text="{Binding Commenter.Username, FallbackValue='[No Username]'}" FontSize="16"/>
                                </HorizontalStackLayout>
                                <HorizontalStackLayout Grid.Row="1">
                                    <Label Text="{Binding Commenter.FirstName }" FontSize="16"/>
                                    <Label Text="{Binding Commenter.LastName}" FontSize="16"/>
                                </HorizontalStackLayout>
                                <Frame CornerRadius="15" HasShadow="True" Grid.Row="2">
                                    <StackLayout>
                                        <Label Text="{Binding CommentText}" FontSize="16"/>
                                        <Label Text="{Binding CreatedAt, StringFormat='Reported on: {0:MMM dd, yyyy HH:mm}'}" />
                                    </StackLayout>
                                </Frame>
                                <Button Text="Delete" TextColor="White" BackgroundColor="Red" 
                Grid.Row="2" HorizontalOptions="End" WidthRequest="80"
                Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=DelteCommantCommand}" 
                CommandParameter="{Binding .}">
                                    <Button.Triggers>
                                        <DataTrigger TargetType="Button" Binding="{Binding IsCommenter}" Value="false">
                                            <Setter Property="IsVisible" Value="False"/>
                                        </DataTrigger>

                                    </Button.Triggers>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                <Frame CornerRadius="15" HasShadow="True">
                    <Entry Text="{Binding CommentText}" IsVisible="{Binding IsCratorOrJoin}">
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding IsCratorOrJoin}" Value="False">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                </Frame>
                <Button Text="upload comments " Command="{Binding CommentCommand}"
                        BackgroundColor="#4CAF50" TextColor="White" HeightRequest="50">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsCratorOrJoin}" Value="false">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
            </VerticalStackLayout>
        </ScrollView>
    </RefreshView>
</ContentPage>
