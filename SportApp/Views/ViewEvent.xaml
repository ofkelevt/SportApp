<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:SportApp.ViewModels"
             x:Class="SportApp.Views.ViewEvent"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:Models="clr-namespace:SportApp.Models"
             x:DataType="vm:ViewEventViewModel"
             BackgroundColor="White">
    <RefreshView Command="{Binding RefreshCommand}" IsRefreshing="{Binding IsRefreshing}">
        <ScrollView>
            <VerticalStackLayout Padding="12" Spacing="16">

                <!-- Event Image -->
                <Frame CornerRadius="12" HasShadow="True" Padding="0" Margin="0,0,0,8">
                    <Image Source="{Binding SelectedEvent.PictureUrl}" 
                           HeightRequest="200" Aspect="AspectFill"/>
                </Frame>

                <!-- Event Title and Creator Info -->
                <VerticalStackLayout HorizontalOptions="Center" Spacing="8">

                    <!-- Event Name: Switch Between Label and Entry -->
                    <Label Text="{Binding SelectedEvent.EventName}" 
                           FontSize="24" FontAttributes="Bold" HorizontalOptions="Center">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" 
                                         Binding="{Binding IsCreator}" Value="True">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Entry Text="{Binding SelectedEvent.EventName}" FontSize="24" HorizontalOptions="Center"
                           HorizontalTextAlignment="Center" WidthRequest="300">
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>

                    <VerticalStackLayout Spacing="8" Padding="4">
                        <HorizontalStackLayout HorizontalOptions="Center" Spacing="8">
                            <Frame CornerRadius="25" Padding="0" IsClippedToBounds="True"
                                   HeightRequest="50" WidthRequest="50">
                                <Image Source="{Binding SelectedEvent.Crator.PictureUrl}" 
                                       Aspect="AspectFill"/>
                            </Frame>
                            <Label Text="{Binding SelectedEvent.Crator.Username, FallbackValue='[No Username]'}" 
                                   FontSize="20" FontAttributes="Bold" VerticalOptions="Center">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=NavigateToUserDetailsCommand}" CommandParameter="{Binding SelectedEvent.Crator}" />
                                </Label.GestureRecognizers>
                            </Label>
                        </HorizontalStackLayout>
                        <HorizontalStackLayout HorizontalOptions="Center" Spacing="4">
                            <Label Text="{Binding SelectedEvent.Crator.FirstName}" FontSize="18"/>
                            <Label Text="{Binding SelectedEvent.Crator.LastName}" FontSize="18"/>
                        </HorizontalStackLayout>
                    </VerticalStackLayout>
                </VerticalStackLayout>

                <!-- Event Details: Location, CreatedAt, and EndsAt -->
                <Frame CornerRadius="10" BackgroundColor="#f1f1f1" Padding="12" Margin="0,4,0,8">
                    <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto, Auto, Auto, Auto" RowSpacing="8" ColumnSpacing="8">

                        <!-- City Name -->
                        <Label Text="Location:" FontAttributes="Bold" Grid.Row="0" Grid.Column="0" VerticalOptions="Center"/>
                        <Label Text="{Binding SelectedEvent.CityName}" Grid.Row="0" Grid.Column="1" VerticalOptions="Center">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsCreator}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Entry Text="{Binding SelectedEvent.CityName}" Grid.Row="0" Grid.Column="1" 
                               VerticalOptions="Center" HeightRequest="40">
                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>

                        <!-- Street Name -->
                        <Label Text="Street:" FontAttributes="Bold" Grid.Row="1" Grid.Column="0" VerticalOptions="Center"/>
                        <Label Text="{Binding SelectedEvent.StreetName}" Grid.Row="1" Grid.Column="1" VerticalOptions="Center">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsCreator}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Entry Text="{Binding SelectedEvent.StreetName}" Grid.Row="1" Grid.Column="1" 
                               VerticalOptions="Center" HeightRequest="40">
                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>

                        <!-- House Number -->
                        <Label Text="Number:" FontAttributes="Bold" Grid.Row="2" Grid.Column="0" VerticalOptions="Center"/>
                        <Label Text="{Binding SelectedEvent.HomeNum}" Grid.Row="2" Grid.Column="1" VerticalOptions="Center">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsCreator}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Entry Text="{Binding SelectedEvent.HomeNum}" Grid.Row="2" Grid.Column="1" 
                               Keyboard="Numeric" VerticalOptions="Center" HeightRequest="40">
                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding IsCreator}" Value="False">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>

                        <!-- CreatedAt and EndsAt -->
                        <Label Text="Created:" FontAttributes="Bold" Grid.Row="3" Grid.Column="0" VerticalOptions="Center"/>
                        <Label Text="{Binding SelectedEvent.CreatedAt, StringFormat='{0:MMM dd, yyyy HH:mm}'}" 
                               Grid.Row="3" Grid.Column="1" VerticalOptions="Center"/>

                        <Label Text="Ends:" FontAttributes="Bold" Grid.Row="4" Grid.Column="0" VerticalOptions="Center"/>
                        <Label Text="{Binding SelectedEvent.EndsAt, StringFormat='{0:MMM dd, yyyy HH:mm}'}" 
                               Grid.Row="4" Grid.Column="1" VerticalOptions="Center"/>
                    </Grid>
                </Frame>

                <!-- Event Description -->
                <Frame CornerRadius="10" BackgroundColor="#f5f5f5" Padding="12" Margin="0,0,0,8">
                    <StackLayout>
                        <Label Text="Description" FontSize="16" FontAttributes="Bold" Margin="0,0,0,4"/>
                        <Label Text="{Binding SelectedEvent.Description}" FontSize="16" TextColor="Gray">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsCreator}" Value="True">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Editor Text="{Binding SelectedEvent.Description}" FontSize="16" 
                                AutoSize="TextChanges" HeightRequest="100">
                            <Editor.Triggers>
                                <DataTrigger TargetType="Editor" Binding="{Binding IsCreator}" Value="False">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Editor.Triggers>
                        </Editor>
                    </StackLayout>
                </Frame>

                <!-- Save Changes Button for Creator -->
                <Button Text="Save Changes" Command="{Binding SaveCommand}" 
                        BackgroundColor="#4CAF50" TextColor="White" HeightRequest="50"
                        CornerRadius="8" FontSize="16" Margin="0,0,0,16">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsCreator}" Value="false">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>

                <!-- Expandable Sections for Participants and Waitlist -->
                <Grid ColumnDefinitions="*,*" ColumnSpacing="8" Margin="0,0,0,16">
                    <!-- Expander for Waitlisted Users -->
                    <toolkit:Expander Grid.Column="0">
                        <toolkit:Expander.Header>
                            <Button Text="Waitlisted" BackgroundColor="#FF5722" TextColor="White"
                                    HeightRequest="44" CornerRadius="8" FontSize="14"/>
                        </toolkit:Expander.Header>
                        <Frame Padding="8" BorderColor="#DDDDDD" HasShadow="False" Margin="0,4,0,0">
                            <Grid RowDefinitions="Auto,Auto" RowSpacing="8">
                                <CollectionView ItemsSource="{Binding WaitListedUsers}" HeightRequest="200"
                                               EmptyView="No waitlisted users">
                                    <CollectionView.ItemTemplate>
                                        <DataTemplate x:DataType="Models:Users">
                                            <Grid Padding="4" RowSpacing="2" RowDefinitions="Auto,Auto">
                                                <HorizontalStackLayout Grid.Row="0" Spacing="8">
                                                    <Frame CornerRadius="16" Padding="0" IsClippedToBounds="True"
                                                           HeightRequest="32" WidthRequest="32">
                                                        <Image Source="{Binding PictureUrl}" Aspect="AspectFill"/>
                                                    </Frame>
                                                    <Label Text="{Binding Username}" FontSize="14" VerticalOptions="Center">
                                                        <Label.GestureRecognizers>
                                                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=NavigateToUserDetailsCommand}" CommandParameter="{Binding .}" />
                                                        </Label.GestureRecognizers>
                                                    </Label>
                                                    <CheckBox IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=IsCreator}"
                                                              IsChecked="{Binding IsCheck, Mode=TwoWay}" VerticalOptions="Center"/>
                                                </HorizontalStackLayout>
                                                <Label Grid.Row="1" Margin="40,0,0,0" FontSize="12">
                                                    <Label.FormattedText>
                                                        <FormattedString>
                                                            <Span Text="{Binding FirstName}"/>
                                                            <Span Text=" "/>
                                                            <Span Text="{Binding LastName}"/>
                                                        </FormattedString>
                                                    </Label.FormattedText>
                                                </Label>
                                            </Grid>
                                        </DataTemplate>
                                    </CollectionView.ItemTemplate>
                                </CollectionView>

                                <HorizontalStackLayout Grid.Row="1" Spacing="8" IsVisible="{Binding IsCreator}">
                                    <Button Text="Reject" Command="{Binding RejectCommand}" BackgroundColor="Red" TextColor="White" 
                                            HeightRequest="40" CornerRadius="8" FontSize="12" WidthRequest="75"/>
                                    <Button Text="Accept" Command="{Binding AcceptCommand}" BackgroundColor="Green" TextColor="White" 
                                            HeightRequest="40" CornerRadius="8" FontSize="12" WidthRequest="75"/>
                                </HorizontalStackLayout>
                            </Grid>
                        </Frame>
                    </toolkit:Expander>

                    <!-- Expander for Participants -->
                    <toolkit:Expander Grid.Column="1">
                        <toolkit:Expander.Header>
                            <Button Text="Participants" BackgroundColor="#6A1B9A" TextColor="White"
                                    HeightRequest="44" CornerRadius="8" FontSize="14"/>
                        </toolkit:Expander.Header>
                        <Frame Padding="8" BorderColor="#DDDDDD" HasShadow="False" Margin="0,4,0,0">
                            <Grid RowDefinitions="Auto,Auto" RowSpacing="8">
                                <CollectionView ItemsSource="{Binding Users}" HeightRequest="200"
                                               EmptyView="No participants yet">
                                    <CollectionView.ItemTemplate>
                                        <DataTemplate x:DataType="Models:Users">
                                            <Grid Padding="4" RowSpacing="2" RowDefinitions="Auto,Auto">
                                                <HorizontalStackLayout Grid.Row="0" Spacing="8">
                                                    <Frame CornerRadius="16" Padding="0" IsClippedToBounds="True"
                                                           HeightRequest="32" WidthRequest="32">
                                                        <Image Source="{Binding PictureUrl}" Aspect="AspectFill"/>
                                                    </Frame>

                                                    <Label Text="{Binding Username}" FontSize="14" VerticalOptions="Center">
                                                        <Label.GestureRecognizers>
                                                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=NavigateToUserDetailsCommand}" CommandParameter="{Binding .}" />
                                                        </Label.GestureRecognizers>
                                                    </Label>
                                                    <CheckBox IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=IsCreator}"
                                                              IsChecked="{Binding IsCheck, Mode=TwoWay}" VerticalOptions="Center"/>
                                                </HorizontalStackLayout>
                                                <Label Grid.Row="1" Margin="40,0,0,0" FontSize="12">
                                                    <Label.FormattedText>
                                                        <FormattedString>
                                                            <Span Text="{Binding FirstName}"/>
                                                            <Span Text=" "/>
                                                            <Span Text="{Binding LastName}"/>
                                                        </FormattedString>
                                                    </Label.FormattedText>
                                                </Label>
                                            </Grid>
                                        </DataTemplate>
                                    </CollectionView.ItemTemplate>
                                </CollectionView>

                                <HorizontalStackLayout Grid.Row="1" Spacing="8" IsVisible="{Binding IsCreator}">
                                    <Button Text="Kick" Command="{Binding KickCommand}" BackgroundColor="Red" TextColor="White" 
                                            HeightRequest="40" CornerRadius="8" FontSize="12" WidthRequest="75"/>
                                    <Button Text="Waitlist" Command="{Binding WaitlistCommand}" BackgroundColor="Orange" TextColor="White" 
                                            HeightRequest="40" CornerRadius="8" FontSize="12" WidthRequest="75"/>
                                </HorizontalStackLayout>
                            </Grid>
                        </Frame>
                    </toolkit:Expander>
                </Grid>

                <!-- Join/Leave Event Buttons -->
                <Button Text="Join Event" 
                        Command="{Binding JoinCommand}" 
                        BackgroundColor="#4CAF50" TextColor="White" 
                        HeightRequest="50" CornerRadius="8" FontSize="16">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsCratorOrJoin}" Value="true">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>

                <Button Text="Leave Event" 
                        Command="{Binding LeaveCommand}" 
                        BackgroundColor="Red" TextColor="White" 
                        HeightRequest="50" CornerRadius="8" FontSize="16">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsJoin}" Value="false">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>

                <!-- Comments Section -->
                <Label Text="Comments" FontSize="18" FontAttributes="Bold" Margin="0,16,0,8"/>
                <CollectionView ItemsSource="{Binding ChatComments}" EmptyView="No comments yet"
                                Margin="0,0,0,8">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="Models:ChatComment">
                            <Frame BorderColor="#EEEEEE" CornerRadius="12" Padding="12" Margin="0,0,0,8">
                                <Grid RowDefinitions="Auto,Auto,Auto" RowSpacing="4">
                                    <HorizontalStackLayout Grid.Row="0" Spacing="8">
                                        <Frame CornerRadius="16" Padding="0" IsClippedToBounds="True"
                                               HeightRequest="32" WidthRequest="32">
                                            <Image Source="{Binding Commenter.PictureUrl}" Aspect="AspectFill"/>
                                        </Frame>
                                        <VerticalStackLayout Spacing="0">
                                            <Label Text="{Binding Commenter.Username, FallbackValue='[No Username]'}" 
                                                   FontSize="14" FontAttributes="Bold"/>
                                            <Label FontSize="12">
                                                <Label.FormattedText>
                                                    <FormattedString>
                                                        <Span Text="{Binding Commenter.FirstName}"/>
                                                        <Span Text=" "/>
                                                        <Span Text="{Binding Commenter.LastName}"/>
                                                    </FormattedString>
                                                </Label.FormattedText>
                                            </Label>
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>

                                    <StackLayout Grid.Row="1" Margin="0,4,0,0">
                                        <Label Text="{Binding CommentText}" FontSize="14"/>
                                        <Label Text="{Binding CreatedAt, StringFormat='{0:MMM dd, yyyy HH:mm}'}" 
                                               FontSize="12" TextColor="Gray"/>
                                    </StackLayout>

                                    <Button Text="Delete" TextColor="White" BackgroundColor="Red" 
                                            Grid.Row="2" HorizontalOptions="End" WidthRequest="70"
                                            HeightRequest="35" CornerRadius="6" FontSize="12"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ViewEventViewModel}}, Path=DelteCommantCommand}" 
                                            CommandParameter="{Binding .}">
                                        <Button.Triggers>
                                            <DataTrigger TargetType="Button" Binding="{Binding IsCommenter}" Value="false">
                                                <Setter Property="IsVisible" Value="False"/>
                                            </DataTrigger>
                                        </Button.Triggers>
                                    </Button>
                                </Grid>
                            </Frame>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>

                <!-- Comment Input Area -->
                <Frame CornerRadius="12" BorderColor="#DDDDDD" HasShadow="False" Padding="4"
                       IsVisible="{Binding IsCratorOrJoin}">
                    <Grid ColumnDefinitions="*, Auto">
                        <Entry Placeholder="Write a comment..." Text="{Binding CommentText}" 
                               Grid.Column="0" VerticalOptions="Center"/>
                        <Button Text="Post" Command="{Binding CommentCommand}"
                                Grid.Column="1" BackgroundColor="#4CAF50" TextColor="White" 
                                HeightRequest="40" WidthRequest="70" CornerRadius="8" Margin="4,0,0,0"/>
                    </Grid>
                </Frame>
            </VerticalStackLayout>
        </ScrollView>
    </RefreshView>
</ContentPage>